load(
    "//absl/copts:rules.bzl",
    "absl17_cc_library",
)

licenses(["notice"])

absl17_cc_library(
    name = "check_impl",
    hdrs = [
        "check_impl.h",
    ],
    deps = [
        ":check_op",
        ":conditions",
        ":log_message",
        ":strip",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "check_op",
    srcs = [
        "check_op.cc",
    ],
    hdrs = [
        "check_op.h",
    ],
    visibility = [
        "//absl/log:__pkg__",
    ],
    deps = [
        ":nullguard",
        ":nullstream",
        ":strip",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:nullability",
        "//absl/debugging:leak_check",
        "//absl/strings",
        "//absl/strings:has_ostream_operator",
    ],
)

absl17_cc_library(
    name = "conditions",
    srcs = [
        "conditions.cc",
    ],
    hdrs = [
        "conditions.h",
    ],
    deps = [
        ":voidify",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "config",
    hdrs = [
        "config.h",
    ],
    visibility = [
        "//absl/log:__pkg__",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "flags",
    hdrs = [
        "flags.h",
    ],
    deps = [
        "//absl/flags:flag",
    ],
)

absl17_cc_library(
    name = "format",
    srcs = [
        "log_format.cc",
    ],
    hdrs = [
        "log_format.h",
    ],
    deps = [
        ":append_truncated",
        ":config",
        ":globals",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/strings",
        "//absl/strings:str_format",
        "//absl/time",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "globals",
    srcs = [
        "globals.cc",
    ],
    hdrs = [
        "globals.h",
    ],
    visibility = [
        "//absl/log:__pkg__",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/base:raw_logging_internal",
        "//absl/strings",
        "//absl/time",
    ],
)

absl17_cc_library(
    name = "log_impl",
    hdrs = [
        "log_impl.h",
    ],
    deps = [
        ":conditions",
        ":log_message",
        ":strip",
        "//absl/log:absl_vlog_is_on",
    ],
)

absl17_cc_library(
    name = "log_message",
    srcs = [
        "log_message.cc",
    ],
    hdrs = [
        "log_message.h",
    ],
    visibility = [
        "//absl/log:__pkg__",
    ],
    deps = [
        ":append_truncated",
        ":format",
        ":globals",
        ":log_sink_set",
        ":nullguard",
        ":proto",
        ":structured_proto",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:errno_saver",
        "//absl/base:log_severity",
        "//absl/base:nullability",
        "//absl/base:raw_logging_internal",
        "//absl/base:strerror",
        "//absl/container:inlined_vector",
        "//absl/debugging:examine_stack",
        "//absl/log:globals",
        "//absl/log:log_entry",
        "//absl/log:log_sink",
        "//absl/log:log_sink_registry",
        "//absl/memory",
        "//absl/strings",
        "//absl/strings:internal",
        "//absl/time",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "append_truncated",
    hdrs = [
        "append_truncated.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/strings",
        "//absl/strings:internal",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "log_sink_set",
    srcs = [
        "log_sink_set.cc",
    ],
    hdrs = [
        "log_sink_set.h",
    ],
    deps = [
        ":config",
        ":globals",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/base:no_destructor",
        "//absl/base:raw_logging_internal",
        "//absl/cleanup",
        "//absl/log:globals",
        "//absl/log:log_entry",
        "//absl/log:log_sink",
        "//absl/strings",
        "//absl/synchronization",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "nullguard",
    srcs = [
        "nullguard.cc",
    ],
    hdrs = [
        "nullguard.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "nullstream",
    hdrs = [
        "nullstream.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "strip",
    hdrs = [
        "strip.h",
    ],
    deps = [
        ":log_message",
        ":nullstream",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
    ],
)

absl17_cc_library(
    name = "structured",
    hdrs = [
        "structured.h",
    ],
    deps = [
        ":log_message",
        ":structured_proto",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/functional:any_invocable",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "structured_proto",
    srcs = [
        "structured_proto.cc",
    ],
    hdrs = [
        "structured_proto.h",
    ],
    deps = [
        ":proto",
        "//absl/base:config",
        "//absl/strings",
        "//absl/types:span",
        "//absl/types:variant",
    ],
)

absl17_cc_library(
    name = "voidify",
    hdrs = [
        "voidify.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "proto",
    srcs = [
        "proto.cc",
    ],
    hdrs = [
        "proto.h",
    ],
    deps = [
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/strings",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "fnmatch",
    srcs = [
        "fnmatch.cc",
    ],
    hdrs = [
        "fnmatch.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "vlog_config",
    srcs = [
        "vlog_config.cc",
    ],
    hdrs = [
        "vlog_config.h",
    ],
    visibility = [
        "//absl/log:__subpackages__",
    ],
    deps = [
        ":fnmatch",
        "//absl/base",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:no_destructor",
        "//absl/base:nullability",
        "//absl/memory",
        "//absl/strings",
        "//absl/synchronization",
        "//absl/types:optional",
    ],
)
