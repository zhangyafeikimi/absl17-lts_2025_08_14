load(
    "//absl/copts:rules.bzl",
    "absl17_cc_library",
)

licenses(["notice"])

absl17_cc_library(
    name = "absl_check",
    hdrs = [
        "absl_check.h",
    ],
    deps = [
        "//absl/log/internal:check_impl",
    ],
)

absl17_cc_library(
    name = "absl_log",
    hdrs = [
        "absl_log.h",
    ],
    deps = [
        "//absl/log/internal:log_impl",
    ],
)

absl17_cc_library(
    name = "check",
    hdrs = [
        "check.h",
    ],
    deps = [
        "//absl/log/internal:check_impl",
        "//absl/log/internal:check_op",
        "//absl/log/internal:conditions",
        "//absl/log/internal:log_message",
        "//absl/log/internal:strip",
    ],
)

absl17_cc_library(
    name = "die_if_null",
    srcs = [
        "die_if_null.cc",
    ],
    hdrs = [
        "die_if_null.h",
    ],
    deps = [
        ":log",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "flags",
    srcs = [
        "flags.cc",
    ],
    hdrs = [
        "flags.h",
    ],
    deps = [
        ":globals",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/flags:flag",
        "//absl/flags:marshalling",
        "//absl/log/internal:config",
        "//absl/log/internal:flags",
        "//absl/log/internal:vlog_config",
        "//absl/strings",
    ],
    alwayslink = True,
)

absl17_cc_library(
    name = "globals",
    srcs = [
        "globals.cc",
    ],
    hdrs = [
        "globals.h",
    ],
    deps = [
        "//absl/base:atomic_hook",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/base:raw_logging_internal",
        "//absl/hash",
        "//absl/log/internal:vlog_config",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "initialize",
    srcs = [
        "initialize.cc",
    ],
    hdrs = [
        "initialize.h",
    ],
    deps = [
        ":globals",
        "//absl/base:config",
        "//absl/log/internal:globals",
        "//absl/time",
    ],
)

absl17_cc_library(
    name = "log",
    hdrs = [
        "log.h",
    ],
    deps = [
        ":vlog_is_on",
        "//absl/log/internal:log_impl",
    ],
)

absl17_cc_library(
    name = "log_entry",
    srcs = [
        "log_entry.cc",
    ],
    hdrs = [
        "log_entry.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:log_severity",
        "//absl/log/internal:config",
        "//absl/log/internal:proto",
        "//absl/strings",
        "//absl/time",
        "//absl/types:span",
    ],
)

absl17_cc_library(
    name = "log_sink",
    srcs = [
        "log_sink.cc",
    ],
    hdrs = [
        "log_sink.h",
    ],
    deps = [
        ":log_entry",
        "//absl/base:config",
    ],
)

absl17_cc_library(
    name = "log_sink_registry",
    hdrs = [
        "log_sink_registry.h",
    ],
    deps = [
        ":log_sink",
        "//absl/base:config",
        "//absl/base:nullability",
        "//absl/log/internal:log_sink_set",
    ],
)

absl17_cc_library(
    name = "log_streamer",
    hdrs = [
        "log_streamer.h",
    ],
    deps = [
        ":absl_log",
        "//absl/base:config",
        "//absl/base:log_severity",
        "//absl/strings",
        "//absl/strings:internal",
        "//absl/types:optional",
        "//absl/utility",
    ],
)

absl17_cc_library(
    name = "structured",
    hdrs = [
        "structured.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/log/internal:structured",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "absl_vlog_is_on",
    hdrs = [
        "absl_vlog_is_on.h",
    ],
    deps = [
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/log/internal:vlog_config",
        "//absl/strings",
    ],
)

absl17_cc_library(
    name = "vlog_is_on",
    hdrs = [
        "vlog_is_on.h",
    ],
    deps = [
        ":absl_vlog_is_on",
    ],
)
