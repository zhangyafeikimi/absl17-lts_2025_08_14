load(
    "//absl/copts:rules.bzl",
    "absl17_cc_library",
)

licenses(["notice"])

absl17_cc_library(
    name = "cpu_detect",
    srcs = [
        "internal/cpu_detect.cc",
    ],
    hdrs = [
        "internal/cpu_detect.h",
    ],
    visibility = [
        "//visibility:private",
    ],
    deps = [
        "//absl/base",
        "//absl/base:config",
        "//absl/types:optional",
    ],
)

absl17_cc_library(
    name = "crc_internal",
    srcs = [
        "internal/crc.cc",
        "internal/crc_internal.h",
        "internal/crc_x86_arm_combined.cc",
    ],
    hdrs = [
        "internal/crc.h",
        "internal/crc32_x86_arm_combined_simd.h",
    ],
    visibility = [
        "//visibility:private",
    ],
    deps = [
        ":cpu_detect",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:endian",
        "//absl/base:prefetch",
        "//absl/base:raw_logging_internal",
        "//absl/memory",
        "//absl/numeric:bits",
    ],
)

absl17_cc_library(
    name = "crc32c",
    srcs = [
        "crc32c.cc",
        "internal/crc32c_inline.h",
        "internal/crc_memcpy_fallback.cc",
        "internal/crc_memcpy_x86_arm_combined.cc",
        "internal/crc_non_temporal_memcpy.cc",
    ],
    hdrs = [
        "crc32c.h",
        "internal/crc32c.h",
        "internal/crc_memcpy.h",
    ],
    deps = [
        ":cpu_detect",
        ":crc_internal",
        ":non_temporal_memcpy",
        "//absl/base:config",
        "//absl/base:core_headers",
        "//absl/base:endian",
        "//absl/base:prefetch",
        "//absl/strings",
        "//absl/strings:str_format",
    ],
)

absl17_cc_library(
    name = "non_temporal_arm_intrinsics",
    hdrs = [
        "internal/non_temporal_arm_intrinsics.h",
    ],
    visibility = [
        ":__pkg__",
    ],
    deps = [
        "//absl/base:config",
    ],
)

absl17_cc_library(
    name = "non_temporal_memcpy",
    hdrs = [
        "internal/non_temporal_memcpy.h",
    ],
    visibility = [
        ":__pkg__",
    ],
    deps = [
        ":non_temporal_arm_intrinsics",
        "//absl/base:config",
        "//absl/base:core_headers",
    ],
)

absl17_cc_library(
    name = "crc_cord_state",
    srcs = [
        "internal/crc_cord_state.cc",
    ],
    hdrs = [
        "internal/crc_cord_state.h",
    ],
    visibility = [
        "//absl/strings:__pkg__",
    ],
    deps = [
        ":crc32c",
        "//absl/base:config",
        "//absl/base:no_destructor",
        "//absl/numeric:bits",
    ],
)
